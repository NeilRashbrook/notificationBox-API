[
  {
    "namespace": "notificationbox",
    //"permissions": ["notificationbox"],
    "types": [
      {
        "id": "Priority",
        "type": "integer",
        "enum": [1, 2, 3, 4, 5, 6, 7, 8, 9],
        "description": "Priority of the notification"
      },
      {
        "id": "NotificationOptions",
        "type": "object",
        "properties": {
          "label": {
            "description": "Notification content",
            "type": "string"
          },
          "image": {
            "optional": true,
            "description": "URL of image to appear on the notification. Default is an appropriate icon for the priority level is used.",
            "type": "string"
          },
          "priority": {
            "optional": true,
            "default": 1,
            "description": "Priority ranges from 1 to 9. Default is 1.",
            "$ref": "Priority"
          },
          "buttons": {
            "optional": true,
            "description": "Text and icons for up to two notification action buttons.",
            "type": "array",
            "items": { "$ref": "Button" }
          }
        }
      },
      {
        "id": "Button",
        "description": "Notification button",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "desciption": "The id of the button. Is send in onButtonClicked events."
          },
          "label": {
            "type": "string",
            "desciption": "The label to appear on the button"
          },
          "accesskey": {
            "type": "string",
            "desciption": "The accesskey attribute set on the button",
            "optional": true
          }
        }
      }
    ],
    "functions": [
      {
        "name": "create",
        "description": "Create a notification",
        "type": "function",
        "async": true,
        "parameters": [
          {
            "name": "windowId",
            "description": "Identifier of the window, where the notificationbox should be added to.",
            "type": "integer"
          },
          {
            "name": "notificationId",
            "description": "Identifier of the notification. If it is empty, this method generates an id. If it matches an existing notification, this method first clears that notification before proceeding with the create operation.",
            "optional": true,
            "type": "string"
          },
          {
            "name": "options",
            "$ref": "NotificationOptions",
            "description": "Contents of the notification"
          }
        ]
      },
      {
        "name": "update",
        "type": "function",
        "description": "Updates an existing notification.",
        "async": true,
        "parameters": [
          {
            "type": "string",
            "name": "notificationId",
            "description": "The id of the notification to be updated."
          },
          {
            "$ref": "NotificationOptions",
            "name": "options",
            "description": "Contents of the notification to update to."
          }
        ]
      },
      {
        "name": "clear",
        "type": "function",
        "description": "Removes an existing notification.",
        "async": true,
        "parameters": [
          {
            "type": "string",
            "name": "notificationId",
            "description": "The id of the notification to be removed."
          }
        ]
      },
      {
        "name": "getAll",
        "type": "function",
        "description": "Retrieves all the notifications.",
        "async": true,
        "parameters": [
        ]
      }
    ],
    "events" : [
      {
        "name": "onButtonClicked",
        "type": "function",
        "description": "Fired when the user pressed a button in the notification.",
        "parameters": [
          {
            "type": "string",
            "name": "notificationId",
            "description": "The notificationId of the clicked notification."
          },
          {
            "type": "string",
            "name": "name",
            "description": "The name of the button clicked by the user."
          }
        ]
      },
      {
        "name": "onDismissed",
        "type": "function",
        "description": "Fired when a notification has been dismissed by the user.",
        "parameters": [
          {
            "type": "string",
            "name": "notificationId",
            "description": "The notificationId of the dismissed notification."
          }
        ]
      },
      {
        "name": "onClosed",
        "type": "function",
        "description": "Fired when a notification has been closed (button, dismiss, or manually calling remove()).",
        "parameters": [
          {
            "type": "string",
            "name": "notificationId",
            "description": "The notificationId of the closed notification."
          },
          {
            "type": "boolean",
            "name": "byUser",
            "description": "The notification was closed by the user."
          }
        ]
      }      
    ]
  }
]
